"use client";
import React, { useState } from 'react';
import Image from 'next/image';
interface SidebarProps {
  setSelectedScreen: (screen: string) => void; // Adjust type based on actual usage
}
const Sidebar = ({ setSelectedScreen }: SidebarProps) => {
  const [selected, setSelected] = useState<string>("Portfolio"); // Track selected screen

  const handleClick = (screen: string) => {
    setSelected(screen); // Update the selected screen state
    setSelectedScreen(screen); // Pass to parent component
  };

  const getLinkClasses = (screen: string) => {
    return selected === screen
      ? "text-[#15A34A] bg-[#F1FDF4] rounded-full p-2 shadow-lg" // Apply green highlight and circle with shadow when selected
      : "text-gray-400 hover:text-black"; // Default styling for unselected items
  };

  return (
    <div className="bg-[#FFFFFF]  text-white h-screen w-[130px] flex flex-col justify-between py-2 ">
      <div className="flex flex-col items-center space-y-8 mt-4">
        <Image width={300} height={100} alt='' src={"/logo.png"} />
        <div className="flex w-full ml-4 space-x-2 items-center justify-start">
          <a
            href="#"
            onClick={() => handleClick("Portfolio")}
            className={getLinkClasses("Portfolio")}
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
              <path strokeWidth={1} strokeLinecap="round" strokeLinejoin="round" d="M3.75 6A2.25 2.25 0 0 1 6 3.75h2.25A2.25 2.25 0 0 1 10.5 6v2.25a2.25 2.25 0 0 1-2.25 2.25H6a2.25 2.25 0 0 1-2.25-2.25V6ZM3.75 15.75A2.25 2.25 0 0 1 6 13.5h2.25a2.25 2.25 0 0 1 2.25 2.25V18a2.25 2.25 0 0 1-2.25 2.25H6A2.25 2.25 0 0 1 3.75 18v-2.25ZM13.5 6a2.25 2.25 0 0 1 2.25-2.25H18A2.25 2.25 0 0 1 20.25 6v2.25A2.25 2.25 0 0 1 18 10.5h-2.25a2.25 2.25 0 0 1-2.25-2.25V6ZM13.5 15.75a2.25 2.25 0 0 1 2.25-2.25H18a2.25 2.25 0 0 1 2.25 2.25V18A2.25 2.25 0 0 1 18 20.25h-2.25A2.25 2.25 0 0 1 13.5 18v-2.25Z" />
            </svg>

          </a>
          <p onClick={() => handleClick("Portfolio")} className='cursor-pointer text-[10px] text-gray-400'>Portfolio</p>
        </div>
        <div className="flex w-full ml-4 space-x-2 items-center justify-start">
          <a
            href="#"
            onClick={() => handleClick("Blog")}
            className={getLinkClasses("Blog")}
          >
            {/* Settings Icon */}
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="size-6">
              <path strokeWidth={1} strokeLinecap="round" strokeLinejoin="round" d="M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 0 1-2.25 2.25M16.5 7.5V18a2.25 2.25 0 0 0 2.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 0 0 2.25 2.25h13.5M6 7.5h3v3H6v-3Z" />
            </svg>

          </a>
          <p onClick={() => handleClick("Blog")} className='cursor-pointer text-[10px] text-gray-400'>Blog</p>
        </div>
        <div className="flex w-full ml-4 space-x-2 items-center justify-start">
          <a
            href="#"
            onClick={() => handleClick("VerticalFarms")}
            className={getLinkClasses("VerticalFarms")}
          >
            <svg
              width="24" height="24"
              strokeWidth={0.5} stroke="currentColor"
              viewBox="0 0 16 16"
              fill="none"
              xmlns="http://www.w3.org/2000/svg">
              <path d="M14.5 9.75C14.5663 9.75 14.6299 9.72366 14.6768 9.67678C14.7237 9.62989 14.75 9.5663 14.75 9.5C14.75 9.4337 14.7237 9.37011 14.6768 9.32322C14.6299 9.27634 14.5663 9.25 14.5 9.25C13.0935 9.2491 11.6946 9.45634 10.3488 9.865C9.79326 9.50318 9.21591 9.1761 8.62 8.88562C10.4885 8.13165 12.4851 7.74604 14.5 7.75C14.5663 7.75 14.6299 7.72366 14.6768 7.67678C14.7237 7.62989 14.75 7.5663 14.75 7.5C14.75 7.4337 14.7237 7.37011 14.6768 7.32322C14.6299 7.27634 14.5663 7.25 14.5 7.25C14.0808 7.25 13.6642 7.26583 13.25 7.2975V5C13.25 4.96119 13.241 4.92291 13.2236 4.8882C13.2063 4.85348 13.181 4.82329 13.15 4.8L9.15 1.8C9.10673 1.76754 9.05409 1.75 9 1.75C8.94591 1.75 8.89327 1.76754 8.85 1.8L4.85 4.8C4.81895 4.82329 4.79375 4.85348 4.77639 4.8882C4.75904 4.92291 4.75 4.96119 4.75 5V7.575C3.68022 7.3585 2.59146 7.24962 1.5 7.25C1.4337 7.25 1.37011 7.27634 1.32322 7.32322C1.27634 7.37011 1.25 7.4337 1.25 7.5C1.25 7.5663 1.27634 7.62989 1.32322 7.67678C1.37011 7.72366 1.4337 7.75 1.5 7.75C3.86189 7.74536 6.19435 8.2741 8.32336 9.29678C10.4524 10.3195 12.323 11.8097 13.7956 13.6562C13.8378 13.7056 13.8975 13.7367 13.9622 13.7428C14.0269 13.7489 14.0914 13.7296 14.1421 13.689C14.1928 13.6484 14.2256 13.5896 14.2338 13.5252C14.2419 13.4608 14.2246 13.3957 14.1856 13.3438C13.7693 12.8246 13.3218 12.3312 12.8456 11.8663C13.3937 11.789 13.9465 11.7501 14.5 11.75C14.5663 11.75 14.6299 11.7237 14.6768 11.6768C14.7237 11.6299 14.75 11.5663 14.75 11.5C14.75 11.4337 14.7237 11.3701 14.6768 11.3232C14.6299 11.2763 14.5663 11.25 14.5 11.25C13.7911 11.2501 13.0835 11.3112 12.385 11.4325C11.9091 11.0023 11.4082 10.6006 10.885 10.2294C12.0634 9.91016 13.2791 9.74896 14.5 9.75ZM10.25 7.8125C9.48313 8.02078 8.73258 8.28503 8.00438 8.60312C7.91938 8.56687 7.835 8.52938 7.75 8.49438V6.25H10.25V7.8125ZM5.25 5.125L9 2.3125L12.75 5.125V7.34312C12.0769 7.41474 11.4089 7.5285 10.75 7.68375V6C10.75 5.9337 10.7237 5.87011 10.6768 5.82322C10.6299 5.77634 10.5663 5.75 10.5 5.75H7.5C7.4337 5.75 7.37011 5.77634 7.32322 5.82322C7.27634 5.87011 7.25 5.9337 7.25 6V8.29438C6.5971 8.04921 5.92904 7.8465 5.25 7.6875V5.125ZM8.34375 13.6381C8.32559 13.6655 8.30221 13.6891 8.27494 13.7074C8.24767 13.7258 8.21705 13.7386 8.18483 13.7451C8.15261 13.7516 8.11943 13.7516 8.08717 13.7453C8.05492 13.739 8.02424 13.7263 7.99687 13.7081C6.07239 12.4276 3.81156 11.7462 1.5 11.75C1.4337 11.75 1.37011 11.7237 1.32322 11.6768C1.27634 11.6299 1.25 11.5663 1.25 11.5C1.25 11.4337 1.27634 11.3701 1.32322 11.3232C1.37011 11.2763 1.4337 11.25 1.5 11.25C3.91009 11.2463 6.26724 11.9568 8.27375 13.2919C8.3289 13.3285 8.36725 13.3856 8.38037 13.4505C8.3935 13.5154 8.38033 13.5829 8.34375 13.6381ZM11.4731 13.3212C11.5205 13.3677 11.5476 13.431 11.5483 13.4973C11.549 13.5637 11.5233 13.6276 11.4769 13.675C11.4305 13.7224 11.3671 13.7494 11.3008 13.7501C11.2344 13.7508 11.1705 13.7252 11.1231 13.6788C8.5577 11.1534 5.09983 9.74168 1.5 9.75C1.4337 9.75 1.37011 9.72366 1.32322 9.67678C1.27634 9.62989 1.25 9.5663 1.25 9.5C1.25 9.4337 1.27634 9.37011 1.32322 9.32322C1.37011 9.27634 1.4337 9.25 1.5 9.25C5.23072 9.24116 8.81439 10.7041 11.4731 13.3212Z" fill="black" />
            </svg>
          </a>
          <p onClick={() => handleClick("VerticalFarms")} className='cursor-pointer text-[10px] text-gray-400'>Vertical Farms</p>
        </div>
        <div className="flex w-full ml-4 space-x-2 items-center justify-start">
          <a
            href="#"
            onClick={() => handleClick("CrowdFunding")}
            className={getLinkClasses("CrowdFunding")}
          >
            <svg width="24" height="24"
              viewBox="0 0 24 24"
              fill="none"
              strokeWidth={0.5} stroke="currentColor"
              xmlns="http://www.w3.org/2000/svg">
              <path d="M12.9248 11.05L9.38581 7.51105L10.0998 6.82305L12.9248 9.64805L18.5998 3.99805L19.2888 4.68605L12.9248 11.05ZM6.40381 18.654L13.9688 20.861L19.9578 19.011C19.9378 18.7077 19.8458 18.489 19.6818 18.355C19.5165 18.221 19.3338 18.154 19.1338 18.154H14.3918C13.9678 18.154 13.5841 18.1374 13.2408 18.104C12.8968 18.0707 12.5448 17.9914 12.1848 17.866L9.99481 17.148L10.3328 16.16L12.3578 16.892C12.6798 17.014 13.0451 17.0874 13.4538 17.112C13.8625 17.136 14.4225 17.15 15.1338 17.154C15.1338 16.842 15.0768 16.59 14.9628 16.398C14.8488 16.206 14.6841 16.072 14.4688 15.996L8.71581 13.884C8.67714 13.8714 8.64181 13.862 8.60981 13.856C8.57781 13.85 8.54247 13.8467 8.50381 13.846H6.40381V18.654ZM2.40381 21V12.846H8.48381C8.57514 12.846 8.66948 12.8554 8.76681 12.874C8.86481 12.8927 8.95714 12.9187 9.04381 12.952L14.8228 15.069C15.1808 15.205 15.4888 15.4494 15.7468 15.802C16.0055 16.1547 16.1348 16.6054 16.1348 17.154H19.1348C19.7368 17.154 20.1981 17.3424 20.5188 17.719C20.8395 18.0964 20.9998 18.5747 20.9998 19.154V19.769L14.0198 21.923L6.40381 19.703V21H2.40381ZM3.40381 20H5.40381V13.846H3.40381V20Z" fill="black" />
            </svg>
          </a>
          <p onClick={() => handleClick("CrowdFunding")} className='cursor-pointer text-[10px] text-gray-400'>Crowd Funding</p>
        </div>
        <div className="flex w-full ml-4 space-x-2 items-center justify-start">
          <a
            href="#"
            onClick={() => handleClick("HomeGrown")}
            className={getLinkClasses("HomeGrown")}
          >
            <svg
              width="24" height="24"
              viewBox="0 0 16 16"
              fill="none"
              strokeWidth={0.3}
              stroke="currentColor"
              xmlns="http://www.w3.org/2000/svg">

              <path d="M15.227 3.0075C15.2233 2.94645 15.1973 2.88888 15.154 2.84569C15.1107 2.8025 15.0531 2.77668 14.992 2.77312C11.8514 2.58562 9.33949 3.52937 8.27199 5.29125C7.54449 6.4925 7.57387 7.91125 8.34949 9.30437C7.80213 9.90566 7.44068 10.6526 7.30887 11.455L5.84074 9.98687C6.38012 8.98687 6.39137 7.96625 5.86699 7.1C5.09074 5.81812 3.27199 5.13312 1.00012 5.26625C0.93938 5.27008 0.882128 5.29594 0.839094 5.33897C0.796061 5.38201 0.770203 5.43926 0.766368 5.5C0.633243 7.77062 1.31824 9.58937 2.60012 10.3656C3.01151 10.6183 3.48485 10.7519 3.96762 10.7519C4.50049 10.7428 5.02269 10.601 5.48699 10.3394L7.25012 12.1044V14C7.25012 14.0663 7.27646 14.1299 7.32334 14.1768C7.37022 14.2237 7.43381 14.25 7.50012 14.25C7.56642 14.25 7.63001 14.2237 7.67689 14.1768C7.72378 14.1299 7.75012 14.0663 7.75012 14V12.1569C7.74777 11.2339 8.08833 10.3429 8.70574 9.65687C9.42387 10.0544 10.1476 10.2544 10.8457 10.2544C11.5034 10.2545 12.1482 10.0726 12.7089 9.72875C14.4701 8.66062 15.412 6.14875 15.227 3.0075ZM2.85887 9.9375C1.77949 9.285 1.18762 7.73062 1.25512 5.755C3.23074 5.68687 4.78512 6.27937 5.44262 7.35875C5.84762 8.02812 5.85449 8.81937 5.47137 9.61437L3.67637 7.82312C3.62881 7.78003 3.56651 7.75688 3.50235 7.75846C3.4382 7.76004 3.37711 7.78623 3.33173 7.83161C3.28635 7.87699 3.26016 7.93808 3.25858 8.00223C3.257 8.06639 3.28015 8.12869 3.32324 8.17625L5.11512 9.96812C4.31949 10.3512 3.52824 10.3444 2.85887 9.9375ZM12.4495 9.3C11.4464 9.9075 10.2564 9.89937 9.06949 9.28437L12.677 5.67625C12.7219 5.62902 12.7467 5.56611 12.7459 5.50091C12.7451 5.43572 12.7189 5.37341 12.6728 5.32727C12.6268 5.28113 12.5645 5.25481 12.4993 5.25392C12.4341 5.25302 12.3712 5.27763 12.3239 5.3225L8.71574 8.93062C8.10074 7.74312 8.09074 6.55562 8.70012 5.55062C9.64449 3.98812 11.8926 3.1425 14.7395 3.26062C14.8582 6.1075 14.0095 8.35562 12.4495 9.3Z" fill="black" />
            </svg>
          </a>
          <p onClick={() => handleClick("HomeGrown")} className='cursor-pointer text-[10px] text-gray-400'>Home Farm</p>
        </div>

        <div className="flex w-full ml-4 space-x-2 items-center justify-start">
          <a
            href="#"
            onClick={() => handleClick("Agents")}
            className={getLinkClasses("Agents")}
          >
            {/* Notifications Icon */}
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth="1.5" stroke="currentColor" className="size-6">
              <path strokeWidth={1} strokeLinecap="round" strokeLinejoin="round" d="M18 18.72a9.094 9.094 0 0 0 3.741-.479 3 3 0 0 0-4.682-2.72m.94 3.198.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0 1 12 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 0 1 6 18.719m12 0a5.971 5.971 0 0 0-.941-3.197m0 0A5.995 5.995 0 0 0 12 12.75a5.995 5.995 0 0 0-5.058 2.772m0 0a3 3 0 0 0-4.681 2.72 8.986 8.986 0 0 0 3.74.477m.94-3.197a5.971 5.971 0 0 0-.94 3.197M15 6.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm6 3a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Zm-13.5 0a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z" />
            </svg>

          </a>
          <p onClick={() => handleClick("Agents")} className='cursor-pointer text-[10px] text-gray-400'>Agents</p>
        </div>
      </div>
    </div>
  );
};

export { Sidebar };
